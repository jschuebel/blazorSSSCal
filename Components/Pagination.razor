<nav>
    <ul class="pagination justify-content-center">
        <li class='page-item'>
            <a class="page-link" @onclick="@(e => SetPage(e, 1))">First</a>
        </li>
        <li class='page-item'>
            <a class="page-link" @onclick="@(e => SetPage(e, currentPage - 1))">Previous</a>
        </li>

        @for (int i = 1; i <= NumberOfPages; i++)
        {
            var currP = i;
            <li class='@((i==currentPage) ? "page-item active":"page-item")'>
                <a class="page-link" @onclick="@(e => SetPage(e, currP))">@i</a>
            </li>
        }
        <li class='page-item'>
            <a class="page-link" @onclick="@(e => SetPage(e, currentPage + 1))">Next</a>
        </li>
        <li class='page-item'>
            <a class="page-link" @onclick="@(e => SetPage(e, PageSize))">Last</a>
        </li>
    </ul>
</nav>


@code {
    private int currentPage = 1;
    [Parameter] public EventCallback<int> OnClick { get; set; }
    [Parameter] public int PageSize { get; set; }
    [Parameter] public int TotalRecords { get; set; }

    public int NumberOfPages { get { return (int)Math.Round((float)TotalRecords / (float)PageSize);  } }

    private void SetPage(MouseEventArgs e, int pageNo)
    {
        currentPage = pageNo;
        OnClick.InvokeAsync(pageNo);
    }
}
